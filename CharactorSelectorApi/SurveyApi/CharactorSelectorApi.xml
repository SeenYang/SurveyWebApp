<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SurveyApi</name>
    </assembly>
    <members>
        <member name="M:SurveyApi.Controllers.CharacterController.CreateCustomerCharacter(SurveyApi.Models.Dtos.CustomiseCharacterDto)">
            <summary>
            This is the endpoint for adding customise character.
            </summary>
            <param name="newCustomise"></param>
            <returns></returns>
        </member>
        <member name="T:SurveyApi.Filters.ValidateCharacterAttribute">
            <summary>
            Here is the sample filter that could do overriding modal validation, authorization/authentication validation, etc.
            </summary>
        </member>
        <member name="M:SurveyApi.Models.AutoMapperProfile.#ctor">
            <summary>
                Add mapping config under this file.
            </summary>
        </member>
        <member name="T:SurveyApi.Models.Dtos.CustomiseCharacterDto">
            <summary>
            This is the DTO to save and provide customise character.
            </summary>
        </member>
        <member name="T:SurveyApi.Models.EnumHelper`1">
            <summary>Extension class for enumerations</summary>
            <typeparam name="TEnum">Enumeration type</typeparam>
        </member>
        <member name="M:SurveyApi.Repository.CharacterRepository.GetAllCharacters">
            <summary>
                This method won't return characters' options
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Repository.CharacterRepository.GetCharacterById(System.Guid,System.Boolean)">
            <summary>
                This method will return whole structure of the character's options
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Repository.CharacterRepository.GetCharacterByName(System.String)">
            <summary>
                This method only for validation the character's name exist or not.
                Need to be extended if another requirement come in.
            </summary>
            <param name="name"></param>
            <returns>Character without options' hierarchy.</returns>
        </member>
        <member name="M:SurveyApi.Repository.CharacterRepository.CreateCustomise(SurveyApi.Models.Dtos.CustomiseCharacterDto)">
            <summary>
            
            </summary>
            <param name="newCustomise"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.GetAllCharacters">
            <summary>
            Get All Characters
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.GetCharacterById(System.Guid)">
            <summary>
            Get Character By Id
            </summary>
            <param name="characterId"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.CreateCharacter(SurveyApi.Models.Dtos.CharacterDto)">
            <summary>
            input character should be structured options.
            The hierarchy will be flatten and saved.
            </summary>
            <param name="newCharacter">CharacterDto with structure options.</param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.CreateCustomerCharacter(SurveyApi.Models.Dtos.CustomiseCharacterDto)">
            <summary>
            Create Customer Character
            </summary>
            <param name="newCustomise"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.GetCustomiseById(System.Guid)">
            <summary>
            Get Customise By Id
            </summary>
            <param name="customiseId"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.GetAllCustomises">
            <summary>
            Get All Customises
            </summary>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.InitiateNewOptionList(System.Collections.Generic.List{SurveyApi.Models.Dtos.OptionDto},System.Guid)">
            <summary>
            Taking structured option list, initiate the ids.
            </summary>
            <param name="options">Structured Option list</param>
            <param name="characterId"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.GetOptionsByCharacterId(System.Guid)">
            <summary>
            Get Options By CharacterId
            </summary>
            <param name="characterId"></param>
            <returns></returns>
        </member>
        <member name="M:SurveyApi.Services.CharacterServices.UpdateOption(SurveyApi.Models.Dtos.OptionDto)">
            <summary>
            Update Option
            </summary>
            <param name="option"></param>
            <returns></returns>
        </member>
    </members>
</doc>
